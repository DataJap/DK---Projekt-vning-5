// Företag: DataKraft i Småland AB
// Utvecklare: Jacob Petersson
// Kund: <Ange kundnamn>
// Beskrivning: En PTC som går igenom aktiviteter beroende på om den är öppen eller stängd, 
//	därefter skriver "Avvikelse finns" på ett egetskapat inmatningsfält i Lu10 om aktiviteten är öppen eller sätter fältet till tomt om den är stängd.
//
// Ändringslogg (Senast överst):
// Datum, Sign, Projektnamn, Kommentar
// 240222, JAP, Övning 5, Egenskapad PTC som kontrollerar aktiviteter
//

////////////////////////////////////////////////////////////////////////////////
// Kontroll ny kompilator 4.15
#pragma
// Radera #pragma vid äldre version, utan tillgång till ny kompilator
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Inargument:
// 1: 
////////////////////////////////////////////////////////////////////////////////

@global
////////////////////////////////////////////////////////////////////////////////
// Globala variabler
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Lib
////////////////////////////////////////////////////////////////////////////////
#uselib dsdbase
#uselib dsstd
#uselib dsui
#uselib dsptc
#uselib dsaproj

#include dsui.i
#include ds.i

////////////////////////////////////////////////////////////////////////////////
// Defines
////////////////////////////////////////////////////////////////////////////////
// LU Nummer
int giLu10
int giLu48


// DB Defines
*define db10Artikelkod			= #1001  

*define db48Status					= #4807
*define db48MappAvvik				= #4805
*define db48RefkodTyp				= #4818
*define db48Refkod					= #4819
*define db10Avvikelse				= #18112

// Dnr Nummer
*define dnr10Artikelkod				= 1001
*define dnr48Status					  = 4807
*define dnr48MappAvvik				= 4805
*define dnr48RefkodTyp				= 4818
*define dnr10Avvikelse				= 18112
*define dnr48Refkod					  = 4819


*define STATUS_STÄNGD				= 8%9
*define STATUS_ÖPPEN				= 1%9	
	
////////////////////////////////////////////////////////////////////////////////
// @PtcExecute
////////////////////////////////////////////////////////////////////////////////		
@PtcExecute
	str sFilter

	
	// Ladda Lu:s
	liDSLoadLu(lsDSRegisterName(10), lsDSRegisterType(10)) -> giLu10
	liDSLoadLu(lsDSRegisterName(48), lsDSRegisterType(48)) -> giLu48
	
	
	// Findfirstex Filter
	ex(#4818,=,"A")%S%T ex_and ex(#4805,=,"AVVIK")%S%T -> sFilter
	

		// Ställer mig på första posten i LU10
		lbDSFind_F(giLu10)
		
		while not lu_eof(giLu10)
			
			// Söker i LU48 med dnr10Artikelkod i index "REFKOD" och filtrera ut aktiviteter med "RefkodTyp" = A och Mappen = AVVIK
			lbDSFindFirstEx(giLu48, lsDSDnr_Get(giLu10,dnr10Artikelkod), "REFKOD", sFilter, "4807,4818,4805,4819")
			
			// Loopa igenom LU48 aktiviteter	
			while not lu_eof(giLu48)
				
				// Kontrollera om Artikelkoden är samma som Refkoden i LU48 och om en aktivitet är öppen 
				ifl lsDSDnr_Get(giLu10,dnr10Artikelkod) = lsDSDnr_Get(giLu48,dnr48Refkod) and lsDSDnr_Get(giLu48,dnr48Status) = STATUS_ÖPPEN
					
					// Skriv "Avvikelse finns"				
					lvDSDnr_Set(giLu10,dnr10Avvikelse,"Avvikelse finns")

					// Uppdatera registret
					lbDSIndex_Update(giLu10,10)						
					
					// Hoppa ur
					wquit
				
				else
					// Hittas ingen aktivitet som är öppen, töm fältet
					lvDSDnr_Set(giLu10,dnr10Avvikelse,"")
					
					// Uppdatera fältet
					lbDSIndex_Update(giLu10,10)		

				endifl	
					
				lbDSFindNextEx(giLu48)
			wend
		lbDSFind_N(giLu10)	
		wend	

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////		
@pbCommand1_click
	PtcExecute 
	
